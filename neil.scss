
/** 1 **/
@for $i from 1 through 8 {
  .load1 path:nth-of-type(#{$i}) {
    -webkit-animation:spin_half 2s .15s*$i cubic-bezier(0.19, 1, 0.22, 1) infinite;
    animation:spin_half 2s .15s*$i cubic-bezier(0.19, 1, 0.22, 1) infinite;
  }
}

/** 2 **/
// Array of segment pairs
$combinations: (
  (1, 5), (2, 6), (3, 7), (4, 8)
);

// Loop through segment array
// Set respective paris of segments
// to animate together.
@each $pos in $combinations {
  .load2 path:nth-of-type(#{nth($pos, 1)}),
  .load2 path:nth-of-type(#{nth($pos, 2)}) {
    -webkit-animation: spin_full 2s linear infinite;
    animation: spin_full 2s linear infinite;
  }
}

/** 3 **/
@for $j from 1 through 8 {
  .load3 path:nth-of-type(#{$j}) {
    -webkit-animation: spin_full 2s cubic-bezier(0.165, 0.84, 0.44, 1) infinite;
    animation: spin_full 2s cubic-bezier(0.165, 0.84, 0.44, 1) infinite;
  }
}

/** 4 **/
@for $i from 1 through 8 {
  .load4 path:nth-of-type(#{$i}) {
    -webkit-animation: spin_single_neg 1.8s .1s*$i cubic-bezier(0.19, 1, 0.22, 1) infinite;
    animation: spin_single_neg 1.8s .1s*$i cubic-bezier(0.19, 1, 0.22, 1) infinite;
  }
}

/** 5 **/
@for $i from 1 through 8 {
  .load5 path:nth-of-type(#{$i}) {
    -webkit-animation: spin_single 1.8s .1s*$i cubic-bezier(0.115, 0.97, 0.14, 1) infinite;
    animation: spin_single 1.8s .1s*$i cubic-bezier(0.115, 0.97, 0.14, 1) infinite;
  }
}

/** 6 **/
@for $i from 1 through 8 {
  .load6 path:nth-of-type(#{$i}) {
    -webkit-animation: spin_single 1s cubic-bezier(0.215, 0.61, 0.355, 1) infinite;
    animation: spin_single 1s cubic-bezier(0.215, 0.61, 0.355, 1) infinite;
  }
}



// Transform paths from origin
// in order to rotate from center.
.pre path {
  -webkit-transform-origin: 50% 50%;
          transform-origin: 50% 50%;
  
  -webkit-transform: translate3d(0, 0, 0);
          transform: translate3d(0, 0, 0);
  
  -webkit-backface-visibility: hidden;
  backface-visibility: hidden;
}

// Spin me 'round.
@-webkit-keyframes spin_half {
  0%  { -webkit-transform: rotate(0deg);   }
  50% { -webkit-transform: rotate(360deg); }
}
@keyframes spin_half {
  0%  { transform: rotate(0deg);   }
  50% { transform: rotate(360deg); }
}

@-webkit-keyframes spin_full {
  0%   { -webkit-transform: rotate(0deg);   }
  100% { -webkit-transform: rotate(360deg); }
}
@keyframes spin_full {
  0%   { transform: rotate(0deg);   }
  100% { transform: rotate(360deg); }
}

@-webkit-keyframes spin_single_neg {
  0%   { -webkit-transform: rotate(0deg); }
  100% { -webkit-transform: rotate(-180deg); }
}
@keyframes spin_single_neg {
  0%   { transform: rotate(0deg); }
  100% { transform: rotate(-180deg); }
}

@-webkit-keyframes spin_single {
  0%   { -webkit-transform: rotate(0deg); }
  100% { -webkit-transform: rotate(180deg); }
}
@keyframes spin_single {
  0%   { transform: rotate(0deg); }
  100% { transform: rotate(180deg); }
}


//----------------------------------
// Presentation Styles

body { text-align: center; }
svg {
  display: inline-block;
  margin-right: 2em;
  
  &:last-child { margin-right: 0; }
}